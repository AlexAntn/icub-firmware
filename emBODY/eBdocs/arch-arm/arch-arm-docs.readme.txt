
here is what the .docx documents deal of.

- arm-system-behaviour 
  tells what the ARM does when it bootstraps, which processes it executes (loader, updater, application),
  which libraries are used to access permanent storage in EEPROM. etc.
  it does not tell how the final application does.

- arm-eventviewer
  tells how to view events generated by the MPU on the micro-vision environment. these events can come from the
  oosiit / osal and are about with context switching and systick. or they can be generated by user-code and can be used
  to measure time of execution of some code parts.

- arm-applications
  tells which applications can be developed using the emBODY framework. The simplest is the main() located at zero offset or
  even located at a non-zero offset and executed with a jump. Others are: the main() with the use of hl library (core or plus);
  the use of multitasking with oosiit / osal; the use of the embOBJ's core application; the use of embOBJ's control loop application.

- arm-application-the-control-loop
  describes the application template developed under embOBJ which implements a tight control loop used for the EMS. 
  