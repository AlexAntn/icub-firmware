
Library embEnv contains services for the embedded environment which are of support for the all 
applications (see note 1) present on the MPU (memory mapping, shared EEPROM storage, board and application
info, partition table, etc.).


In embEnv are available the following.

- Templates for assigning the memory resources of RAM and FLASH to the eProcesses running on a given board.
  This information is contained in file eEmemorymap.h which must define some macro used in other files of embEnv.
  They are in embenv/cfg.
  Usage.  The set of eProcesses used on a given board must all use the same eEmemorymap.h copied from embenv/cfg
          and tailored to ones needs. As an example, file embenv/cfg /eEmemorymap_stm32f1_256k_v1.template 
          uses 256KB of FLASH and 64KB of RAM plus 2KB of EEPROM for the three eLoader, eUpdater, eApplication.          
  
  
- Templates for the scatter files used in ARM CC Keil compiler for mapping each eProcess in RAM / FLASH.
  They are in embenv/cfg. 
  Usage. Copy the relevant scatter file and use it in your project. Change to include eEmemorymap.h with 
         the exact relative path.
  
- Source code based upon abslayer and midware, for the management of various tasks which are common to all
  eProcesses. They are grouped in the following.
  - sharserv:       Library which offers EEPROM storage, inter-process communication, application info, partition 
                    table for the ePocesses inside the MPU. 
                    Usage. Compile all files in embenv/src, include embenv/api/eEsharedServices.h.
                    A customised file eEmemorymap.h must be included in the project.
                    
                    
                    
Note 1.
  The MPU has three (or more) code spaces (or eProcesses) in its inside: the eLoader, the eUpdater, and 
  the eApplication.                   