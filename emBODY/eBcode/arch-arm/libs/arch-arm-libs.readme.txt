
It contains source code for libraries used in boards built with MPUs with ARM architecture (ARM-CM3 and ARM-CM4).
It also contains projects for the libraries. 

- lowlevel
  contains low level code for the target: access to HW functionalities down to HW registers.
  - hl-core:        offers HW services ranging from a bare register access, up to use of silicon vendor libraries 
                    (CMSIS and ST standard peripheral libraries).
                    
     
- midware
  contains simple access to an RTOS, a basic tool for timing diagrams and more advanced HW support than the hl-core. 
  They are:
  - eventviewer:    offers visualisation on keil's u-vision. 
  - hl-plus:        offers simple HW services (I2C etc.) and support of some external chips (EEPROMS, MEMS, etc.).
  - oosiit:         it is an RTOS based on the free-source RTOS from ARM-KEIL (RTX) with better APIs, better code
                    separation and some extra features (32 bit timing, protected heap management, etc.).
 
- highlevel
  contains higher layer services.

  - abslayer
    contains an abstraction layer for RTOS, TCP/IP, and HW use.  The abstraction layer allows the applications to make
    simpler calls to those services.
    They are:
    - hal:            offers simplified HW services to the application.
    - haal:           the new HArdware Abstraction Layer
    - ipal:           offers TCP/IP services.
    - osal:           offers RTOS services with APIs which depends on the midware RTOS (which may be free or commercial)

  - services
    contains services based upon abslayer (or midware), such as management of permanent storage, which are shared by
    the applications.
    They are:
    - sharserv:       Library based upon the abslayer which offers storage, inter-process communication, application info, partition 
                      table for the e-processes inside the MPU: eLoader, eUpdater, eApplication (see eBODY\eB\arch-arm\apps folder). 
  
  - embobj
    contains embedded objects which are specific of ARM architecture (not of a simple MEE type)
    SHALL I USE IT ??
    
                     