Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  C:\Software\iCub\firmware\controllerBll\Support\ARTDIVU32UZ.asm  Page 1



1                          ;----------------------------------------------------------------------
2                          ;  Metrowerks Embedded Runtime Support 1998 May
3                          ;
4                          ;       rtdiv32.asm
5                          ;
6                          ;               Copyright © 1998 Metrowerks, Inc.
7                          ;               All rights reserved.
8                          ;
9                          ;       Routines
10                         ;       --------
11                         ;       32 bit signed and unsigned integer divide
12                         ;
13                         ;----------------------------------------------------------------------
14     
15                                   section rtlib
16                                   include "asmdef.h"
17     
18     
19     
20                         ;----------------------------------------------------------------------
21                         ;
22                         ; MSL
23                         ; Copyright ©1995-2006 Freescale Corporation.  All rights reserved.
24                         ;
25                         ; $Date: 2006/02/09 17:01:36 $
26                         ; $Revision: 1.3.4.2 $
27                         ;
28                         ;
29                         ;
30                         ;       Routines
31                         ;       --------
32                         ;       macros and defines for simplifying assembly coding
33                         ;
34                         ;----------------------------------------------------------------------
35                         ;
36     
37        0001             TRUE      equ     1
38        0000             FALSE     equ     0
39     
40                         ;
41                         ; Conditional assembly switch setting
42                         ;
43     
44        0000             REV_A2    equ     FALSE                             ; Set to true for configurations
45                                                                             ; with revision A2 of the DSP56811.
46     
47        0001             REV_B     equ     TRUE                              ; Set to true for configurations
48                                                                             ; with revision B of the DSP56811.
49     
50                         ;************************************************************************
51                         ;
52                         ; Macro definitions
53                         ;
54                         ;************************************************************************
55                         PUSH      MACRO   arg
56   m                               lea     (sp)+
57   m                               move    arg,x:(sp)
58   m                               ENDM
59     
60                         push      MACRO   arg
61   m                               lea     (sp)+
62   m                               move    arg,x:(sp)
Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  asmdef.h  Page 2



63   m                               ENDM
64                         ;************************************************************************
65                         ;
66                         ; page0 register definitions
67                         ;
68                         ;************************************************************************
69     
70        0030             mr0       equ     x:$30
71        0031             mr1       equ     x:$31
72        0032             mr2       equ     x:$32
73        0033             mr3       equ     x:$33
74        0034             mr4       equ     x:$34
75        0035             mr5       equ     x:$35
76        0036             mr6       equ     x:$36
77        0037             mr7       equ     x:$37
78        0038             mr8       equ     x:$38
79        0039             mr9       equ     x:$39
80        003A             mr10      equ     x:$3A
81        003B             mr11      equ     x:$3B
82        003C             mr12      equ     x:$3C
83        003D             mr13      equ     x:$3D
84        003E             mr14      equ     x:$3E
85        003F             mr15      equ     x:$3F
86     
87        0030             MR0       equ     x:$30
88        0031             MR1       equ     x:$31
89        0032             MR2       equ     x:$32
90        0033             MR3       equ     x:$33
91        0034             MR4       equ     x:$34
92        0035             MR5       equ     x:$35
93        0036             MR6       equ     x:$36
94        0037             MR7       equ     x:$37
95        0038             MR8       equ     x:$38
96        0039             MR9       equ     x:$39
97        003A             MR10      equ     x:$3A
98        003B             MR11      equ     x:$3B
99        003C             MR12      equ     x:$3C
100       003D             MR13      equ     x:$3D
101       003E             MR14      equ     x:$3E
102       003F             MR15      equ     x:$3F
103    
104                        ;************************************************************************
105                        ;
106                        ; Peripheral register definitions for init56811.asm
107                        ;
108                        ;************************************************************************
109    
110       FFFB             IPR       equ     x:$FFFB                           ; Interrupt priority register
111    
112       FFF1             COPCTL    equ     x:$FFF1                           ; COP control regiser
113    
114       FFE6             SPCR1     equ     x:$FFE6                           ; SPI1 control register
115       FFE2             SPCR0     equ     x:$FFE2                           ; SPI0 control register
116    
117       FFDF             TCR01     equ     x:$FFDF                           ; Timer01 Control register
118       FFDA             TCR2      equ     x:$FFDA                           ; Timer2 control reg
119    
120       FFD2             MCR2      equ     x:$FFD2                           ; MMSI control reg 2
121    
122                        ;************************************************************************
123                        ;
124                        ; Assembly version of errno.h and signal.h
Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  asmdef.h  Page 3



125                        ;
126                        ;************************************************************************
127       0006             signal_max equ    6
128       0001             SIGABRT   equ     1
129       0002             SIGFPE    equ     2
130       0003             SIGILL    equ     3
131       0004             SIGINT    equ     4
132       0005             SIGSEGV   equ     5
133       0006             SIGTERM   equ     6
134    
135       0000             ENOERR    equ     0
136       0021             EDOM      equ     33
137       0022             ERANGE    equ     34
138       0023             EFPOS     equ     35
139       0024             ESIGPARM  equ     36
140    
141    
142                                  global  ARTDIVU32UZ
143    
144       P:000000                   org     p:
145    
146                        ARTDIVU32UZ:
147       P:000000 6CB0              clr     B                                 ; clear register for resulting quotient
148                        ;       bfset   #$0100,omr      ; make sure the CC bit is set
149    
150       P:000001 8108              move              a0,y0
151       P:000002 8306              move              a1,y1                   ; move A to y1:y0
152       P:000003 B4FE              move              x:(sp-2),a
153       P:000004 F0CB              move              x:(sp-3),a0             ; load divisor into A
                   FFFD
154       P:000006 81DD              bfclr   #1,sr                             ; clear the carry bit
                   0001
155    
156       P:000008 87DE              move              #32,LC                  ; I don't know why I can't use immediate #32
                   0020
157       P:00000A CCDE              do      LC,endloop
                   001A
158       P:00000C 7633              rol     y0
159       P:00000D 76B3              rol     y1
160       P:00000E A004              bcc     notthisbit
161       P:00000F 74B0              asl     B
162       P:000010 83C9              bfset   #1,b0
                   0001
163       P:000012 A901              bra     around
164                        notthisbit:
165       P:000013 74B0              asl     B
166                        around:
167       P:000014 7480              sub     A,B                               ; If carry is clear, sub was OK.
168       P:000015 A001              bcc     nottoobig                         ; otherwise, restore B
169       P:000016 6480              add     A,B
170                        nottoobig:
171       P:000017 85DD              bfchg   #1,sr                             ; reverse cc bit
                   0001
172       P:000019 E040              nop
173       P:00001A E040              nop
174                        endloop:
175       P:00001B 7633              rol     y0
176       P:00001C 76B3              rol     y1
177       P:00001D 8403              move              y1,A                    ; move result to A
178       P:00001E 8081              move              y0,a0
179    
180                                  IF      REV_B
Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  C:\Software\iCub\firmware\controllerBll\Support\ARTDIVU32UZ.asm  Page 4



181                        ;       bfclr   #$0100,omr      ; set CC setting to 36 bits
182                                  ENDIF
183    
184       P:00001F EDD8              rts
185    
186                                  endsec
187    
188                                  end

0    Errors
0    Warnings


