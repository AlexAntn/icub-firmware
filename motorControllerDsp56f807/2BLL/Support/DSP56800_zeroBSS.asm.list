Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  C:\Software\iCub\firmware\controllerBll\Support\DSP56800_zeroBSS.asm  Page 1



1      
2      
3      
4      
5      
6      
7                          ;  metrowerks sample code
8      
9      
10     
11     
12     
13                         ; define which clearBSS routine to assemble
14                         ; see alternative routine below
15     
16     
17                         ; use the software loop routine
18                         ; if you have more than 8191 elements to zero
19     
20                         ; use the hardware loop routine
21                         ; if you have less than 8191 elements to zero
22                         ; 56800 loop LC register is 13-bits
23     
24     
25     
26                         ; to handle the general case
27                         ; software loop is DSP56800 stationery default for __bssClear
28     
29                                   DEFINE  useSoftwareLoop ''
30     
31     
32     
33     
34     
35                                   section startup
36     
37     
38                         ; these variables are defined in the linker command file (LCF)
39     
40                                   XREF    F_bss_size
41                                   XREF    F_bss_addr
42     
43     
44        P:000000                   org     p:
45     
46     
47                                   GLOBAL  F__bssClear
48     
49                         ;       SUBROUTINE "F__bssClear",F__bssClear,F__bssClearEND-F__bssClear
50     
51     
52                         F__bssClear:
53     
54     
55     
56     
57                         ; if  is defined, assemble this code
58     
59                                   IF      @DEF('useSoftwareLoop')
60     
61     
62     
Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  C:\Software\iCub\firmware\controllerBll\Support\DSP56800_zeroBSS.asm  Page 2



63                         ; clear bss with software loop
64     
65        P:000000 87C1              move              #F_bss_size,y0          ; set count
                   0000
66        P:000002 8E01              tstw    y0                                ; test count
67        P:000003 A307              beq     end_bssClear                      ; if zero count, then exit
68     
69        P:000004 C000              move              #0,x0                   ; set x0 to zero
70        P:000005 87D1              move              #F_bss_addr,r1          ; set dest address
                   0000
71        P:000007 E040              nop
72     
73                         loop_bssClear:
74        P:000008 D001              move              x0,x:(r1)+              ; stash x0 value at address r1
75                                                                             ; and increment r1
76        P:000009 6413              decw    y0                                ; decrement count and test
77        P:00000A A27D              bne     loop_bssClear                     ; if not zero, continue loop
78                         end_bssClear:
79     
80     
81     
82                                   ELSE                                      ; assemble the following code
99                                   ENDIF
100    
101       P:00000B EDD8              rts
102    
103                        F__bssClearEND:
104    
105                                  endsec
106                                  end

0    Errors
0    Warnings


