Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  C:\Software\iCub\firmware\controllerBll\Support\interruptreg_push.asm  Page 1



1      
2                                    SECTION rtlib
3                                    GLOBAL  INTERRUPTREGPUSH
4                                    include "asmdef.h"
5      
6      
7      
8                          ;----------------------------------------------------------------------
9                          ;
10                         ; MSL
11                         ; Copyright ©1995-2006 Freescale Corporation.  All rights reserved.
12                         ;
13                         ; $Date: 2006/02/09 17:01:36 $
14                         ; $Revision: 1.3.4.2 $
15                         ;
16                         ;
17                         ;
18                         ;       Routines
19                         ;       --------
20                         ;       macros and defines for simplifying assembly coding
21                         ;
22                         ;----------------------------------------------------------------------
23                         ;
24     
25        0001             TRUE      equ     1
26        0000             FALSE     equ     0
27     
28                         ;
29                         ; Conditional assembly switch setting
30                         ;
31     
32        0000             REV_A2    equ     FALSE                             ; Set to true for configurations
33                                                                             ; with revision A2 of the DSP56811.
34     
35        0001             REV_B     equ     TRUE                              ; Set to true for configurations
36                                                                             ; with revision B of the DSP56811.
37     
38                         ;************************************************************************
39                         ;
40                         ; Macro definitions
41                         ;
42                         ;************************************************************************
43                         PUSH      MACRO   arg
44   m                               lea     (sp)+
45   m                               move    arg,x:(sp)
46   m                               ENDM
47     
48                         push      MACRO   arg
49   m                               lea     (sp)+
50   m                               move    arg,x:(sp)
51   m                               ENDM
52                         ;************************************************************************
53                         ;
54                         ; page0 register definitions
55                         ;
56                         ;************************************************************************
57     
58        0030             mr0       equ     x:$30
59        0031             mr1       equ     x:$31
60        0032             mr2       equ     x:$32
61        0033             mr3       equ     x:$33
62        0034             mr4       equ     x:$34
Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  asmdef.h  Page 2



63        0035             mr5       equ     x:$35
64        0036             mr6       equ     x:$36
65        0037             mr7       equ     x:$37
66        0038             mr8       equ     x:$38
67        0039             mr9       equ     x:$39
68        003A             mr10      equ     x:$3A
69        003B             mr11      equ     x:$3B
70        003C             mr12      equ     x:$3C
71        003D             mr13      equ     x:$3D
72        003E             mr14      equ     x:$3E
73        003F             mr15      equ     x:$3F
74     
75        0030             MR0       equ     x:$30
76        0031             MR1       equ     x:$31
77        0032             MR2       equ     x:$32
78        0033             MR3       equ     x:$33
79        0034             MR4       equ     x:$34
80        0035             MR5       equ     x:$35
81        0036             MR6       equ     x:$36
82        0037             MR7       equ     x:$37
83        0038             MR8       equ     x:$38
84        0039             MR9       equ     x:$39
85        003A             MR10      equ     x:$3A
86        003B             MR11      equ     x:$3B
87        003C             MR12      equ     x:$3C
88        003D             MR13      equ     x:$3D
89        003E             MR14      equ     x:$3E
90        003F             MR15      equ     x:$3F
91     
92                         ;************************************************************************
93                         ;
94                         ; Peripheral register definitions for init56811.asm
95                         ;
96                         ;************************************************************************
97     
98        FFFB             IPR       equ     x:$FFFB                           ; Interrupt priority register
99     
100       FFF1             COPCTL    equ     x:$FFF1                           ; COP control regiser
101    
102       FFE6             SPCR1     equ     x:$FFE6                           ; SPI1 control register
103       FFE2             SPCR0     equ     x:$FFE2                           ; SPI0 control register
104    
105       FFDF             TCR01     equ     x:$FFDF                           ; Timer01 Control register
106       FFDA             TCR2      equ     x:$FFDA                           ; Timer2 control reg
107    
108       FFD2             MCR2      equ     x:$FFD2                           ; MMSI control reg 2
109    
110                        ;************************************************************************
111                        ;
112                        ; Assembly version of errno.h and signal.h
113                        ;
114                        ;************************************************************************
115       0006             signal_max equ    6
116       0001             SIGABRT   equ     1
117       0002             SIGFPE    equ     2
118       0003             SIGILL    equ     3
119       0004             SIGINT    equ     4
120       0005             SIGSEGV   equ     5
121       0006             SIGTERM   equ     6
122    
123       0000             ENOERR    equ     0
124       0021             EDOM      equ     33
Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  asmdef.h  Page 3



125       0022             ERANGE    equ     34
126       0023             EFPOS     equ     35
127       0024             ESIGPARM  equ     36
128    
129       P:000000                   ORG     P:
130                        ;
131                        ; Push ALL registers onto the stack EXCEPT for the following registers:
132                        ;
133                        ;     PC           => assumed to be global
134                        ;     SR           => assumed to be global or previously saved by interrupt mechanism
135                        ;     IPR          => assumed to be global
136                        ;     SP           => assumed to be global
137                        ;     0x38 - 0x3F  => Permanent register file used by CW
138                        ;
139    
140    
141                        INTERRUPTREGPUSH:
142       P:000000 DE0B              lea     (SP)+
143       P:000001 DD0B              move              N,X:(SP)+
144       P:000002 D00B              move              X0,X:(SP)+
145       P:000003 D10B              move              Y0,X:(SP)+
146       P:000004 D30B              move              Y1,X:(SP)+
147       P:000005 D08B              move              A0,X:(SP)+
148       P:000006 D60B              move              A1,X:(SP)+
149       P:000007 D28B              move              A2,X:(SP)+
150       P:000008 D18B              move              B0,X:(SP)+
151       P:000009 D70B              move              B1,X:(SP)+
152       P:00000A D38B              move              B2,X:(SP)+
153       P:00000B D80B              move              R0,X:(SP)+
154       P:00000C D90B              move              R1,X:(SP)+
155       P:00000D DA0B              move              R2,X:(SP)+
156       P:00000E DB0B              move              R3,X:(SP)+
157       P:00000F D88B              move              OMR,X:(SP)+
158       P:000010 DF8B              move              LA,X:(SP)+
159       P:000011 D48B              move              M01,X:(SP)+
160       P:000012 DE8B              move              LC,X:(SP)+
161                                                                            ;
162                                                                            ; save hardware stack
163                                                                            ;
164       P:000013 DD8B              move              SR,X:(SP)+
165       P:000014 DB8B              move              HWS,X:(SP)+
166       P:000015 DD8B              move              SR,X:(SP)+
167       P:000016 DB8B              move              HWS,X:(SP)+
168    
169                                                                            ;
170                                                                            ; Save temporary register file at 0x30 - 0x37 used by compiler
171                                                                            ;
172       P:000017 B330              move              X:<mr0,Y1
173       P:000018 D30B              move              Y1,X:(SP)+
174       P:000019 B331              move              X:<mr1,Y1
175       P:00001A D30B              move              Y1,X:(SP)+
176       P:00001B B332              move              X:<mr2,Y1
177       P:00001C D30B              move              Y1,X:(SP)+
178       P:00001D B333              move              X:<mr3,Y1
179       P:00001E D30B              move              Y1,X:(SP)+
180       P:00001F B334              move              X:<mr4,Y1
181       P:000020 D30B              move              Y1,X:(SP)+
182       P:000021 B335              move              X:<mr5,Y1
183       P:000022 D30B              move              Y1,X:(SP)+
184       P:000023 B336              move              X:<mr6,Y1
185       P:000024 D30B              move              Y1,X:(SP)+
186       P:000025 B337              move              X:<mr7,Y1
Motorola DSP56800 Assembler  Version 6.3.16  110-11-03  12:48:55  C:\Software\iCub\firmware\controllerBll\Support\interruptreg_push.asm  Page 4



187       P:000026 D30B              move              Y1,X:(SP)+
188                                                                            ;
189                                                                            ; 30 registers have been pushed on the stack.
190                                                                            ; To return, we must simulate the original jsr
191                                                                            ;
192       P:000027 B3E0              move              X:(SP-32),Y1
193       P:000028 D30B              move              Y1,X:(SP)+
194       P:000029 DD9F              move              SR,X:(SP)
195       P:00002A B3E4              move              X:(SP-28),Y1
196       P:00002B EDD8              rts
197                                  endsec
198                                  end

0    Errors
0    Warnings


